{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MyContext = createContext();\n\nfunction MyContextConsumer() {\n  var value = useContext(MyContext);\n  return _jsx(Text, {\n    children: value\n  });\n}\n\nexport default function App() {\n  return _jsx(MyContext.Provider, {\n    value: \"Hello, world!\",\n    children: _jsx(View, {\n      children: _jsx(MyContextConsumer, {})\n    })\n  });\n}","map":{"version":3,"names":["React","createContext","useContext","MyContext","MyContextConsumer","value","App"],"sources":["C:/Users/jakub/Skrivebord/semester5/DMobile Software Development/Assignments/Assignment 1/assignment1/App.js"],"sourcesContent":["/*\nimport * as React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Home from \"./Home\";\nimport DetailsScreen from \"./Detail\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={Home} />\n          <Stack.Screen name=\"Details\" component={DetailsScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n*/\nimport React, { createContext, useContext } from 'react';\nimport { View, Text } from 'react-native';\n\n// Create the context object\nconst MyContext = createContext();\n\n// Create a component that consumes the context\nfunction MyContextConsumer() {\n    const value = useContext(MyContext);\n    return <Text>{value}</Text>;\n}\n\n// Render the context provider and consumer\nexport default function App() {\n    return (\n        <MyContext.Provider value=\"Hello, world!\">\n            <View>\n                <MyContextConsumer />\n            </View>\n        </MyContext.Provider>\n    );\n}"],"mappings":"AA+BA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;;;;AAIA,IAAMC,SAAS,GAAGF,aAAa,EAA/B;;AAGA,SAASG,iBAAT,GAA6B;EACzB,IAAMC,KAAK,GAAGH,UAAU,CAACC,SAAD,CAAxB;EACA,OAAO,KAAC,IAAD;IAAA,UAAOE;EAAP,EAAP;AACH;;AAGD,eAAe,SAASC,GAAT,GAAe;EAC1B,OACI,KAAC,SAAD,CAAW,QAAX;IAAoB,KAAK,EAAC,eAA1B;IAAA,UACI,KAAC,IAAD;MAAA,UACI,KAAC,iBAAD;IADJ;EADJ,EADJ;AAOH"},"metadata":{},"sourceType":"module"}